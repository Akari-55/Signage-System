{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from \"axios\";\nconst initialState = {\n  contents: [],\n  contentGroups: [],\n  contentGroupMembers: [],\n  loading: false,\n  error: null\n};\nexport const fetchContent = createAsyncThunk('Content/fetchContent', async monitor_id => {\n  console.log('Fetching content ');\n  try {\n    const response = await axios.get(`http://localhost:8000/signage_app/content?monitor_id=${monitor_id}`, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n        //\"Cache-Control\":\"no-store\",\n      }\n    });\n    console.log(\"Data received:\", response.data);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching content:\", error);\n    throw error;\n  }\n});\nexport const fetchContentGroup = createAsyncThunk('Content/fetchContentGroup', async monitor_id => {\n  console.log('Fetching content Group');\n  const response = await axios.get(`http://localhost:8000/signage_app/contentgroup?monitor_id=${monitor_id}`, {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  console.log(\"Data received:\", response.data);\n  return response.data;\n});\nexport const fetchContentGroupMember = createAsyncThunk('Content/fetchContentGroupMember', async () => {\n  console.log('Fetching content Group Member');\n  const response = await axios.get(`http://localhost:8000/signage_app/contentgroupmember`, {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  return response.data;\n});\nexport const deleteContent_api = createAsyncThunk('Content/deleteContent_api', async (contentId, {\n  dispatch,\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.delete(`http://localhost:8000/signage_app/content/${contentId}/`);\n    if (response.status !== 204) {\n      console.error('API request failed with status code:', response.status);\n      return rejectWithValue('API request failed');\n    }\n    return response.data;\n  } catch (error) {\n    console.error('API request failed:', error);\n    return rejectWithValue(error.response.data);\n  }\n});\nexport const createContent_api = createAsyncThunk('Content/createContent_api', async ({\n  formData\n}, thunkAPI) => {\n  try {\n    const response = await axios.post('http://localhost:8000/signage_app/content/', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data);\n  }\n});\nexport const editContent_api = createAsyncThunk('Content/editContent_api', async (contentId, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.get(`http://localhost:8000/signage_app/content/${contentId}/`);\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\n// export const updateContent_api=createAsyncThunk(\n//     'Content/updateContent_api',\n//     async(content:Content,{dispatch,rejectWithValue})=>{\n//         console.log(\"Sending PUT Request with data:\",content);\n//         try{\n//             const response=await axios.put(`http://localhost:8000/signage_app/content/${content.id}/`,content);\n//             dispatch(updateContent(content));\n//             return response.data;\n//         }catch(error:any){\n//             return rejectWithValue(error.response.data);\n//         }\n//     }\n// );\nexport const updateContent_api = createAsyncThunk('Content/updateContent_api', async (content, {\n  dispatch,\n  rejectWithValue\n}) => {\n  console.log(\"Sending PUT Request with data:\", content);\n\n  // FormDataの作成\n  const formData = new FormData();\n  Object.keys(content).forEach(key => {\n    formData.append(key, content[key]);\n  });\n\n  // ファイルがある場合のみ追加\n  if (content.file) {\n    console.log(\"okaa\");\n    formData.append('file', content.file);\n  }\n  try {\n    // Content-Typeをmultipart/form-dataに設定してリクエストを送信\n    const response = await axios.put(`http://localhost:8000/signage_app/content/${content.id}/`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    dispatch(updateContent(content));\n    return response.data;\n  } catch (error) {\n    return rejectWithValue(error.response.data);\n  }\n});\nexport const deleteContentGroup_api = createAsyncThunk('Content/deleteContentGroup_api', async (contentId, {\n  dispatch,\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.delete(`http://localhost:8000/signage_app/contentgroup/${contentId}/`);\n    if (response.status !== 204) {\n      console.error('API request failed with status code:', response.status);\n      return rejectWithValue('API request failed');\n    }\n    return response.data;\n  } catch (error) {\n    console.error('API request failed:', error);\n    return rejectWithValue(error.response.data);\n  }\n});\nexport const createContentGroup_api = createAsyncThunk('Content/createContentGroup_api', async ({\n  formData\n}, thunkAPI) => {\n  try {\n    const response = await axios.post(`http://localhost:8000/signage_app/contentgroup/`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data);\n  }\n});\nexport const createContentGroupMember_api = createAsyncThunk('Content/createContentGroup_api', async ({\n  formData\n}, thunkAPI) => {\n  try {\n    const response = await axios.post(`http://localhost:8000/signage_app/contentgroupmember/`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data);\n  }\n});\nexport const uploadContentFile_api = createAsyncThunk('Content/uploadContentFile_api', async ({\n  numericId,\n  formData\n}, {\n  getState\n}) => {\n  try {\n    console.log(numericId);\n    const response = await axios.post(`http://localhost:8000/signage_app/content/${numericId}/upload/`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n});\nconst contentSlice = createSlice({\n  name: 'content',\n  initialState,\n  reducers: {\n    //同期アクションの定義\n    //コンテンツの追加\n    addContent: (state, action) => {\n      state.contents.push(action.payload);\n    },\n    //コンテンツの更新\n    updateContent: (state, action) => {\n      const index = state.contents.findIndex(content => content.id === action.payload.id);\n      if (index !== -1) {\n        state.contents[index] = action.payload;\n      }\n    },\n    //コンテンツの削除\n    deleteContent: (state, action) => {\n      state.contents = state.contents.filter(content => content.id !== action.payload);\n    },\n    //コンテンツグループの作成\n    addContentGroup: (state, action) => {\n      state.contentGroups.push(action.payload);\n    },\n    //コンテンツグループの更新\n    updateContentGroup: (state, action) => {\n      const index = state.contentGroups.findIndex(group => group.id === action.payload.id);\n      if (index !== -1) {\n        state.contentGroups[index] = action.payload;\n      }\n    },\n    //コンテンツグループの削除\n    deleteContentGroup: (state, action) => {\n      state.contentGroups = state.contentGroups.filter(group => group.id !== action.payload);\n      //関連するContentGroupMemberの削除\n      state.contentGroupMembers = state.contentGroupMembers.filter(member => member.group !== action.payload);\n    },\n    //コンテンツグループメンバーの作成\n    addContentGroupMember: (state, action) => {\n      state.contentGroupMembers.push(action.payload);\n    },\n    //コンテンツグループメンバーの更新\n    updateContentGroupMember: (state, action) => {\n      const index = state.contentGroupMembers.findIndex(member => member.id === action.payload.id);\n      if (index !== -1) {\n        state.contentGroupMembers[index] = action.payload;\n      }\n    },\n    //コンテンツグループメンバの削除\n    deleteContentGroupMember: (state, action) => {\n      state.contentGroupMembers = state.contentGroupMembers.filter(member => member.id !== action.payload);\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchContent.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchContent.fulfilled, (state, action) => {\n      //コンテンツデータの取得に成功した場合の処理\n      console.log(\"fetchContent fulfilled, state updated:\", action.payload);\n      state.contents = action.payload;\n      state.loading = false;\n    }).addCase(fetchContent.rejected, (state, action) => {\n      var _action$error$message;\n      //エラーが発生した場合の処理\n      console.error(\"fetchContent failed, error:\", action.error.message);\n      state.error = (_action$error$message = action.error.message) !== null && _action$error$message !== void 0 ? _action$error$message : 'エラーが発生しました';\n      state.loading = false;\n    }).addCase(fetchContentGroup.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchContentGroup.fulfilled, (state, action) => {\n      //コンテンツグループデータの取得に成功した場合の処理\n      console.log(\"ok\");\n      state.contentGroups = action.payload;\n      state.loading = false;\n    }).addCase(fetchContentGroup.rejected, (state, action) => {\n      var _action$error$message2;\n      //エラーが発生した場合の処理\n      state.error = (_action$error$message2 = action.error.message) !== null && _action$error$message2 !== void 0 ? _action$error$message2 : 'エラーが発生しました';\n      state.loading = false;\n    }).addCase(fetchContentGroupMember.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchContentGroupMember.fulfilled, (state, action) => {\n      //コンテンツグループメンバーのデータの取得に成功した場合の処理\n      state.contentGroupMembers = action.payload;\n      state.loading = false;\n    }).addCase(fetchContentGroupMember.rejected, (state, action) => {\n      var _action$error$message3;\n      //エラーが発生した場合の処理\n      state.error = (_action$error$message3 = action.error.message) !== null && _action$error$message3 !== void 0 ? _action$error$message3 : 'エラーが発生しました';\n      state.loading = false;\n    });\n  }\n});\nexport const {\n  addContent,\n  updateContent,\n  deleteContent,\n  addContentGroup,\n  updateContentGroup,\n  deleteContentGroup,\n  addContentGroupMember,\n  updateContentGroupMember,\n  deleteContentGroupMember\n} = contentSlice.actions;\nexport const SelectContent = state => state.content.contents;\n_c = SelectContent;\nexport const SelectContentGroup = state => state.content.contentGroups;\n_c2 = SelectContentGroup;\nexport const SelectContentGroupMember = state => state.content.contentGroupMembers;\n_c3 = SelectContentGroupMember;\nexport const SelectLoading = state => state.content.loading;\n_c4 = SelectLoading;\nexport const SelectError = state => state.content.error;\n_c5 = SelectError;\nexport default contentSlice.reducer;\nexport const SelectContentById = (state, contentId) => {\n  return state.content.contents.find(content => content.id === contentId);\n};\n_c6 = SelectContentById;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"SelectContent\");\n$RefreshReg$(_c2, \"SelectContentGroup\");\n$RefreshReg$(_c3, \"SelectContentGroupMember\");\n$RefreshReg$(_c4, \"SelectLoading\");\n$RefreshReg$(_c5, \"SelectError\");\n$RefreshReg$(_c6, \"SelectContentById\");","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","contents","contentGroups","contentGroupMembers","loading","error","fetchContent","monitor_id","console","log","response","get","headers","data","fetchContentGroup","fetchContentGroupMember","deleteContent_api","contentId","dispatch","rejectWithValue","delete","status","createContent_api","formData","thunkAPI","post","editContent_api","updateContent_api","content","FormData","Object","keys","forEach","key","append","file","put","id","updateContent","deleteContentGroup_api","createContentGroup_api","createContentGroupMember_api","uploadContentFile_api","numericId","getState","contentSlice","name","reducers","addContent","state","action","push","payload","index","findIndex","deleteContent","filter","addContentGroup","updateContentGroup","group","deleteContentGroup","member","addContentGroupMember","updateContentGroupMember","deleteContentGroupMember","extraReducers","builder","addCase","pending","fulfilled","rejected","_action$error$message","message","_action$error$message2","_action$error$message3","actions","SelectContent","_c","SelectContentGroup","_c2","SelectContentGroupMember","_c3","SelectLoading","_c4","SelectError","_c5","reducer","SelectContentById","find","_c6","$RefreshReg$"],"sources":["/usr/src/app/frontend/signage_app/src/features/Content/contentSlice.ts"],"sourcesContent":["import {createSlice,createAsyncThunk,PayloadAction} from '@reduxjs/toolkit';\nimport {Content,ContentGroup,ContentGroupMember,Device} from '../types';\nimport {RootState} from \"../../app/store\";\nimport axios from \"axios\";\ninterface ContentState{\n    contents:Content[];\n    contentGroups:ContentGroup[];\n    contentGroupMembers:ContentGroupMember[];\n    loading:boolean;\n    error:string | null;\n}\nconst initialState: ContentState={\n    contents:[],\n    contentGroups:[],\n    contentGroupMembers:[],\n    loading:false,\n    error:null,\n};\n\nexport const fetchContent=createAsyncThunk(\n    'Content/fetchContent',\n    async(monitor_id:number)=>{\n        console.log('Fetching content ');\n        try{\n            const response=await axios.get(`http://localhost:8000/signage_app/content?monitor_id=${monitor_id}`,{\n                headers:{\n                    \"Content-Type\":\"application/json\",\n                    //\"Cache-Control\":\"no-store\",\n                },\n            });\n            console.log(\"Data received:\",response.data);\n            return response.data;\n        }catch(error){\n            console.error(\"Error fetching content:\",error);\n            throw error;\n        }\n    }\n);\nexport const fetchContentGroup=createAsyncThunk(\n    'Content/fetchContentGroup',\n    async(monitor_id:number)=>{\n        console.log('Fetching content Group');\n        const response =await axios.get(`http://localhost:8000/signage_app/contentgroup?monitor_id=${monitor_id}`,{\n            headers:{\n                \"Content-Type\":\"application/json\",\n            },\n        });\n        console.log(\"Data received:\",response.data);\n        return response.data;\n    }\n)\nexport const fetchContentGroupMember=createAsyncThunk(\n    'Content/fetchContentGroupMember',\n    async()=>{\n        console.log('Fetching content Group Member');\n        const response =await axios.get(`http://localhost:8000/signage_app/contentgroupmember`,{\n            headers:{\n                \"Content-Type\":\"application/json\",\n            },\n        });\n        return response.data;\n    }\n)\nexport const deleteContent_api =createAsyncThunk(\n    'Content/deleteContent_api',\n    async(contentId:number,{dispatch,rejectWithValue})=>{\n        try{\n            const response=await axios.delete(`http://localhost:8000/signage_app/content/${contentId}/`);\n            if(response.status !== 204){\n                console.error('API request failed with status code:',response.status);\n                return rejectWithValue('API request failed');\n            }\n            return response.data;\n        }catch(error:any){\n            console.error('API request failed:',error);\n            return rejectWithValue(error.response.data);\n        }\n    }\n);\nexport const createContent_api=createAsyncThunk(\n    'Content/createContent_api',\n    async({formData}:{formData:FormData},thunkAPI)=>{\n        try{\n            const response=await axios.post('http://localhost:8000/signage_app/content/',formData,{\n                headers:{\n                    'Content-Type':'multipart/form-data',\n                },\n            });\n            return response.data;\n        }catch(error:any){\n            return thunkAPI.rejectWithValue(error.response.data);\n        }\n    }\n);\nexport const editContent_api=createAsyncThunk(\n    'Content/editContent_api',\n    async(contentId:number,{rejectWithValue})=>{\n        try{\n            const response=await axios.get(`http://localhost:8000/signage_app/content/${contentId}/`);\n            return response.data;\n        }catch(error:any){\n            return rejectWithValue(error.response.data);\n        }\n        }\n);\n// export const updateContent_api=createAsyncThunk(\n//     'Content/updateContent_api',\n//     async(content:Content,{dispatch,rejectWithValue})=>{\n//         console.log(\"Sending PUT Request with data:\",content);\n//         try{\n//             const response=await axios.put(`http://localhost:8000/signage_app/content/${content.id}/`,content);\n//             dispatch(updateContent(content));\n//             return response.data;\n//         }catch(error:any){\n//             return rejectWithValue(error.response.data);\n//         }\n//     }\n// );\nexport const updateContent_api = createAsyncThunk(\n    'Content/updateContent_api',\n    async(content: Content, { dispatch, rejectWithValue }) => {\n        console.log(\"Sending PUT Request with data:\", content);\n\n        // FormDataの作成\n        const formData = new FormData();\n        Object.keys(content).forEach(key => {\n            formData.append(key, content[key]);\n        });\n\n        // ファイルがある場合のみ追加\n        if (content.file) {\n            console.log(\"okaa\");\n            formData.append('file', content.file);\n        }\n\n        try {\n            // Content-Typeをmultipart/form-dataに設定してリクエストを送信\n            const response = await axios.put(`http://localhost:8000/signage_app/content/${content.id}/`, formData, {\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                }\n            });\n\n            dispatch(updateContent(content));\n            return response.data;\n        } catch (error:any) {\n            return rejectWithValue(error.response.data);\n        }\n    }\n);\nexport const deleteContentGroup_api =createAsyncThunk(\n    'Content/deleteContentGroup_api',\n    async(contentId:number,{dispatch,rejectWithValue})=>{\n        try{\n            const response=await axios.delete(`http://localhost:8000/signage_app/contentgroup/${contentId}/`);\n            if(response.status !== 204){\n                console.error('API request failed with status code:',response.status);\n                return rejectWithValue('API request failed');\n            }\n            return response.data;\n        }catch(error:any){\n            console.error('API request failed:',error);\n            return rejectWithValue(error.response.data);\n        }\n    }\n);\nexport const createContentGroup_api=createAsyncThunk(\n    'Content/createContentGroup_api',\n    async({formData}:{formData:FormData},thunkAPI)=>{\n        try{\n            const response=await axios.post(`http://localhost:8000/signage_app/contentgroup/`,formData,{\n                headers:{\n                    'Content-Type':'multipart/form-data',\n                },\n            });\n            return response.data;\n        }catch(error:any){\n            return thunkAPI.rejectWithValue(error.response.data);\n        }\n    }\n);\nexport const createContentGroupMember_api=createAsyncThunk(\n    'Content/createContentGroup_api',\n    async({formData}:{formData:FormData},thunkAPI)=>{\n        try{\n            const response=await axios.post(`http://localhost:8000/signage_app/contentgroupmember/`,formData,{\n                headers:{\n                    'Content-Type':'multipart/form-data',\n                },\n            });\n            return response.data;\n        }catch(error:any){\n            return thunkAPI.rejectWithValue(error.response.data);\n        }\n    }\n);\ninterface UploadFileParams{\n    numericId:number;\n    formData:FormData;\n}\nexport const uploadContentFile_api=createAsyncThunk(\n    'Content/uploadContentFile_api',\n    async({numericId,formData}:UploadFileParams,{getState})=>{\n        try{\n            console.log(numericId);\n            const response=await axios.post(`http://localhost:8000/signage_app/content/${numericId}/upload/`,formData,{\n                headers:{\n                    'Content-Type': 'multipart/form-data', \n                },\n            });\n            return response.data;\n        } catch(error){\n            throw error;\n        }\n    }\n)\nconst contentSlice=createSlice({\n    name:'content',\n    initialState,\n    reducers:{\n        //同期アクションの定義\n        //コンテンツの追加\n        addContent:(state,action:PayloadAction<Content>)=>{\n            state.contents.push(action.payload);\n        },\n        //コンテンツの更新\n        updateContent:(state,action:PayloadAction<Content>)=>{\n            const index=state.contents.findIndex(content =>content.id === action.payload.id);\n            if(index !== -1){\n                state.contents[index]=action.payload;\n            }\n        },\n        //コンテンツの削除\n        deleteContent:(state,action:PayloadAction<number>)=>{\n            state.contents=state.contents.filter(content=>content.id !==action.payload);\n        },\n        //コンテンツグループの作成\n        addContentGroup:(state,action:PayloadAction<ContentGroup>)=>{\n            state.contentGroups.push(action.payload);\n        },\n        //コンテンツグループの更新\n        updateContentGroup:(state,action:PayloadAction<ContentGroup>)=>{\n            const index=state.contentGroups.findIndex(group=>group.id === action.payload.id);\n            if(index !== -1){\n                state.contentGroups[index]=action.payload;\n            }\n        },\n        //コンテンツグループの削除\n        deleteContentGroup:(state,action:PayloadAction<number>)=>{\n            state.contentGroups=state.contentGroups.filter(group=>group.id !== action.payload);\n            //関連するContentGroupMemberの削除\n            state.contentGroupMembers=state.contentGroupMembers.filter(member=>member.group !== action.payload);\n        },\n        //コンテンツグループメンバーの作成\n        addContentGroupMember:(state,action:PayloadAction<ContentGroupMember>)=>{\n            state.contentGroupMembers.push(action.payload);\n        },\n        //コンテンツグループメンバーの更新\n        updateContentGroupMember:(state,action:PayloadAction<ContentGroupMember>)=>{\n            const index = state.contentGroupMembers.findIndex(member=>member.id===action.payload.id);\n            if(index !== -1){\n                state.contentGroupMembers[index]=action.payload;\n            }\n        },\n        //コンテンツグループメンバの削除\n        deleteContentGroupMember:(state,action:PayloadAction<number>)=>{\n            state.contentGroupMembers=state.contentGroupMembers.filter(member =>member.id !== action.payload);\n        },\n    },\n    extraReducers:(builder)=>{\n        builder\n            .addCase(fetchContent.pending,(state)=>{\n                state.loading=true;\n                state.error=null;\n            })\n            .addCase(fetchContent.fulfilled,(state,action)=>{\n                //コンテンツデータの取得に成功した場合の処理\n                console.log(\"fetchContent fulfilled, state updated:\", action.payload);\n                state.contents=action.payload;\n                state.loading=false;\n            })\n            .addCase(fetchContent.rejected,(state,action)=>{\n                //エラーが発生した場合の処理\n                console.error(\"fetchContent failed, error:\", action.error.message);\n                state.error=action.error.message ?? 'エラーが発生しました';\n                state.loading=false;\n            })\n            \n            .addCase(fetchContentGroup.pending,(state)=>{\n                state.loading=true;\n                state.error=null;\n            })\n            .addCase(fetchContentGroup.fulfilled,(state,action)=>{\n                //コンテンツグループデータの取得に成功した場合の処理\n                console.log(\"ok\");\n                state.contentGroups=action.payload;\n                state.loading=false;\n            })\n            .addCase(fetchContentGroup.rejected,(state,action)=>{\n                //エラーが発生した場合の処理\n                state.error=action.error.message ?? 'エラーが発生しました'\n                state.loading=false;\n            })\n            .addCase(fetchContentGroupMember.pending,(state)=>{\n                state.loading=true;\n                state.error=null;\n            })\n            .addCase(fetchContentGroupMember.fulfilled,(state,action)=>{\n                //コンテンツグループメンバーのデータの取得に成功した場合の処理\n                state.contentGroupMembers=action.payload;\n                state.loading=false;\n            })\n            .addCase(fetchContentGroupMember.rejected,(state,action)=>{\n                //エラーが発生した場合の処理\n                state.error=action.error.message ?? 'エラーが発生しました'\n                state.loading=false;\n            })\n        \n    },\n})\nexport const{\n    addContent,\n    updateContent,\n    deleteContent,\n    addContentGroup,\n    updateContentGroup,\n    deleteContentGroup,\n    addContentGroupMember,\n    updateContentGroupMember,\n    deleteContentGroupMember,\n}=contentSlice.actions\n\nexport const SelectContent=(state:RootState)=>state.content.contents;\nexport const SelectContentGroup=(state:RootState)=>state.content.contentGroups;\nexport const SelectContentGroupMember=(state:RootState)=>state.content.contentGroupMembers;\nexport const SelectLoading=(state:RootState)=>state.content.loading;\nexport const SelectError=(state:RootState)=>state.content.error;\n\nexport default contentSlice.reducer;\nexport const SelectContentById=(state:RootState,contentId:number)=>{\n    return state.content.contents.find(content=>content.id===contentId);\n}\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}