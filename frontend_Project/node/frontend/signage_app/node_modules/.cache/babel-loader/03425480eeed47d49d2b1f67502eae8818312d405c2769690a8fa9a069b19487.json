{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from \"axios\";\nconst initialState = {\n  devices: [],\n  isOn: false,\n  currentContent: null,\n  currentContentGoup: null,\n  currentMonitorId: null\n};\nexport const fetchDevice = createAsyncThunk('Device/fetchDevice', async () => {\n  try {\n    const response = await axios.get('http://localhost:8000/signage_app/device', {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"デバイスの取得中にエラーが発生しました\", error);\n    throw error;\n  }\n});\nexport const deviceSlice = createSlice({\n  name: 'device',\n  initialState,\n  reducers: {\n    //デバイスのオンオフを切り替える\n    toggleDevice: state => {\n      state.isOn = !state.isOn;\n    },\n    //現在表示中のコンテンツを更新する\n    setCurrentContent: (state, action) => {\n      state.currentContent = action.payload;\n    },\n    setCurrentContentGroup: (state, action) => {\n      state.currentContentGoup = action.payload;\n    },\n    selectDevice: (state, action) => {\n      const monitorId = action.payload;\n      state.currentMonitorId = monitorId;\n    },\n    setCurrentMonitorId: (state, action) => {\n      state.currentMonitorId = action.payload;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchDevice.fulfilled, (state, action) => {\n      state.devices = action.payload;\n    });\n  }\n});\nexport const {\n  toggleDevice,\n  setCurrentContent,\n  setCurrentContentGroup,\n  selectDevice,\n  setCurrentMonitorId\n} = deviceSlice.actions;\nexport const SelectCurrentMonitorId = state => state.device.currentMonitorId;\n_c = SelectCurrentMonitorId;\nexport const SelectDevice = state => state.device.devices;\n_c2 = SelectDevice;\nexport default deviceSlice.reducer;\nvar _c, _c2;\n$RefreshReg$(_c, \"SelectCurrentMonitorId\");\n$RefreshReg$(_c2, \"SelectDevice\");","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","devices","isOn","currentContent","currentContentGoup","currentMonitorId","fetchDevice","response","get","headers","data","error","console","deviceSlice","name","reducers","toggleDevice","state","setCurrentContent","action","payload","setCurrentContentGroup","selectDevice","monitorId","setCurrentMonitorId","extraReducers","builder","addCase","fulfilled","actions","SelectCurrentMonitorId","device","_c","SelectDevice","_c2","reducer","$RefreshReg$"],"sources":["/usr/src/app/frontend/signage_app/src/features/Device/deviceSlice.ts"],"sourcesContent":["import {createSlice,PayloadAction,createAsyncThunk} from '@reduxjs/toolkit';\nimport {Device} from '../types';\nimport {RootState} from \"../../app/store\"\nimport axios from \"axios\";\ninterface DeviceState{\n    devices:Device[];\n    isOn:boolean;\n    currentContent:string | null;\n    currentContentGoup:string|null;\n    currentMonitorId:string | null;\n}\nconst initialState:DeviceState={\n    devices:[],\n    isOn:false,\n    currentContent:null,\n    currentContentGoup:null,\n    currentMonitorId:null,\n};\nexport const fetchDevice=createAsyncThunk(\n    'Device/fetchDevice',\n    async()=>{\n        try{\n        const response =await axios.get('http://localhost:8000/signage_app/device',{\n            headers:{\n                \"Content-Type\":\"application/json\",\n            }\n        });\n        return response.data;\n    }catch(error){\n        console.error(\"デバイスの取得中にエラーが発生しました\",error);\n        throw error;\n    }\n        \n    }\n)\nexport const deviceSlice = createSlice({\n    name:'device',\n    initialState,\n    reducers:{\n        //デバイスのオンオフを切り替える\n        toggleDevice:(state)=>{\n            state.isOn = !state.isOn;\n        },\n        //現在表示中のコンテンツを更新する\n        setCurrentContent:(state,action:PayloadAction<string>)=>{\n            state.currentContent=action.payload;\n        },\n        setCurrentContentGroup:(state,action:PayloadAction<string>)=>{\n            state.currentContentGoup=action.payload;\n        },\n        selectDevice:(state,action)=>{\n            const monitorId=action.payload;\n            state.currentMonitorId=monitorId;\n        },\n        setCurrentMonitorId:(state,action)=>{\n            state.currentMonitorId =action.payload;\n        },\n        },\n    extraReducers:(builder)=>{\n        builder\n            .addCase(fetchDevice.fulfilled,(state,action)=>{\n                state.devices=action.payload;\n            })\n    }\n});\n\nexport const {toggleDevice,setCurrentContent,setCurrentContentGroup,selectDevice,setCurrentMonitorId}=deviceSlice.actions;\nexport const SelectCurrentMonitorId=(state:RootState)=>state.device.currentMonitorId;\nexport const SelectDevice=(state:RootState)=>state.device.devices;\n\n\nexport default deviceSlice.reducer;"],"mappings":"AAAA,SAAQA,WAAW,EAAeC,gBAAgB,QAAO,kBAAkB;AAG3E,OAAOC,KAAK,MAAM,OAAO;AAQzB,MAAMC,YAAwB,GAAC;EAC3BC,OAAO,EAAC,EAAE;EACVC,IAAI,EAAC,KAAK;EACVC,cAAc,EAAC,IAAI;EACnBC,kBAAkB,EAAC,IAAI;EACvBC,gBAAgB,EAAC;AACrB,CAAC;AACD,OAAO,MAAMC,WAAW,GAACR,gBAAgB,CACrC,oBAAoB,EACpB,YAAS;EACL,IAAG;IACH,MAAMS,QAAQ,GAAE,MAAMR,KAAK,CAACS,GAAG,CAAC,0CAA0C,EAAC;MACvEC,OAAO,EAAC;QACJ,cAAc,EAAC;MACnB;IACJ,CAAC,CAAC;IACF,OAAOF,QAAQ,CAACG,IAAI;EACxB,CAAC,QAAMC,KAAK,EAAC;IACTC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAACA,KAAK,CAAC;IAC1C,MAAMA,KAAK;EACf;AAEA,CACJ,CAAC;AACD,OAAO,MAAME,WAAW,GAAGhB,WAAW,CAAC;EACnCiB,IAAI,EAAC,QAAQ;EACbd,YAAY;EACZe,QAAQ,EAAC;IACL;IACAC,YAAY,EAAEC,KAAK,IAAG;MAClBA,KAAK,CAACf,IAAI,GAAG,CAACe,KAAK,CAACf,IAAI;IAC5B,CAAC;IACD;IACAgB,iBAAiB,EAACA,CAACD,KAAK,EAACE,MAA4B,KAAG;MACpDF,KAAK,CAACd,cAAc,GAACgB,MAAM,CAACC,OAAO;IACvC,CAAC;IACDC,sBAAsB,EAACA,CAACJ,KAAK,EAACE,MAA4B,KAAG;MACzDF,KAAK,CAACb,kBAAkB,GAACe,MAAM,CAACC,OAAO;IAC3C,CAAC;IACDE,YAAY,EAACA,CAACL,KAAK,EAACE,MAAM,KAAG;MACzB,MAAMI,SAAS,GAACJ,MAAM,CAACC,OAAO;MAC9BH,KAAK,CAACZ,gBAAgB,GAACkB,SAAS;IACpC,CAAC;IACDC,mBAAmB,EAACA,CAACP,KAAK,EAACE,MAAM,KAAG;MAChCF,KAAK,CAACZ,gBAAgB,GAAEc,MAAM,CAACC,OAAO;IAC1C;EACA,CAAC;EACLK,aAAa,EAAEC,OAAO,IAAG;IACrBA,OAAO,CACFC,OAAO,CAACrB,WAAW,CAACsB,SAAS,EAAC,CAACX,KAAK,EAACE,MAAM,KAAG;MAC3CF,KAAK,CAAChB,OAAO,GAACkB,MAAM,CAACC,OAAO;IAChC,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAACJ,YAAY;EAACE,iBAAiB;EAACG,sBAAsB;EAACC,YAAY;EAACE;AAAmB,CAAC,GAACX,WAAW,CAACgB,OAAO;AACzH,OAAO,MAAMC,sBAAsB,GAAEb,KAAe,IAAGA,KAAK,CAACc,MAAM,CAAC1B,gBAAgB;AAAC2B,EAAA,GAAxEF,sBAAsB;AACnC,OAAO,MAAMG,YAAY,GAAEhB,KAAe,IAAGA,KAAK,CAACc,MAAM,CAAC9B,OAAO;AAACiC,GAAA,GAArDD,YAAY;AAGzB,eAAepB,WAAW,CAACsB,OAAO;AAAC,IAAAH,EAAA,EAAAE,GAAA;AAAAE,YAAA,CAAAJ,EAAA;AAAAI,YAAA,CAAAF,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}